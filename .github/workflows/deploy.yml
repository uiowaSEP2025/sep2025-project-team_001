name: Build, Push Docker Image & Deploy to EKS

on:
  push:
    branches:
      - main  # Trigger on push to main branch

permissions:
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout code
      uses: actions/checkout@v2

    # Set up AWS CLI credentials for Terraform and Docker
    - name: Set up AWS CLI
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    # Step 1: Run Terraform to apply resources for the database and ECR (only those resources)
    - name: Terraform Apply (Create RDS & ECR)
      run: |
        terraform init
        terraform apply -auto-approve -target=aws_db_instance.postgres -target=aws_ecr_repository.django_api_repo

    # Step 2: Get Terraform Outputs (RDS details, ECR URL)
    - name: Get Terraform Outputs
      id: outputs
      run: |
        echo "RDS_ENDPOINT=$(terraform output -raw rds_endpoint)" >> $GITHUB_ENV
        echo "DB_USERNAME=$(terraform output -raw db_username)" >> $GITHUB_ENV
        echo "DB_PASSWORD=$(terraform output -raw db_password)" >> $GITHUB_ENV
        echo "ECR_REPO_URL=$(terraform output -raw ecr_repository_url)" >> $GITHUB_ENV

    # Step 3: Log in to Amazon ECR
    - name: Log in to Amazon ECR
      run: |
        aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${{ env.ECR_REPO_URL }}

    # Step 4: Build the Docker image
    - name: Build Docker image
      run: docker build -t django-api .

    # Step 5: Tag the Docker image for ECR
    - name: Tag Docker image for ECR
      run: docker tag django-api:latest ${{ env.ECR_REPO_URL }}:latest

    # Step 6: Push Docker image to ECR
    - name: Push Docker image to ECR
      run: docker push ${{ env.ECR_REPO_URL }}:latest

    # Step 7: Apply Terraform for the rest of the resources
    - name: Terraform Apply (Create EKS and deploy)
      run: terraform apply -auto-approve
